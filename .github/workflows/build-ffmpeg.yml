name: build-ffmpeg
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            shell: bash
          - os: windows-latest
            arch: AMD64
            shell: 'msys2 {0}'
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install packages
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install pkg-config
          brew unlink gettext libidn2 libpng libtiff libunistring little-cms2 unbound
      - uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows-latest'
        with:
          install: base-devel mingw-w64-x86_64-gcc mingw-w64-x86_64-gperf mingw-w64-x86_64-nasm
          path-type: inherit
      - name: Build FFmpeg
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BEFORE_BUILD: python scripts/build-ffmpeg.py /tmp/vendor
          CIBW_BEFORE_BUILD_WINDOWS: python scripts\build-ffmpeg.py C:\cibw\vendor
          CIBW_BUILD: cp312-*
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: LD_LIBRARY_PATH=/tmp/vendor/lib:$LD_LIBRARY_PATH auditwheel repair -w {dest_dir} {wheel}
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: delvewheel repair --add-path C:\cibw\vendor\bin -w {dest_dir} {wheel}
          CIBW_SKIP: "*musllinux*"

          CIBW_TEST_COMMAND: python -c "import dummy"
        run: |
          pip install cibuildwheel delvewheel
          cibuildwheel --output-dir output
          rm -f output/*.whl

      - name: Upload FFmpeg
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: output/*
